## OpenRelik Helm Chart
## Please use this Helm chart for deploying OpenRelik to a Google Kubernetes Engine (GKE) environment.
##
## @section Global parameters
##
global:
  ## @param global.localData Allocates local PVC for data storage.
  ##
  localData: false
  ## @param global.projectId Sets the Google Cloud Project ID.
  ##
  projectId: <REPLACE_WITH_PROJECT_ID>
  ## @param global.useResourceRequests Allocates resources to the pods.
  ##
  useResourceRequests: true

## @section OpenRelik parameters
##
openrelik:
  mediator:
    ## @param openrelik.mediator.image Sets the OpenRelik mediator container image to use.
    ##
    image: "ghcr.io/openrelik/openrelik-mediator:2024.12.12"
    ## @param openrelik.mediator.replicas Sets the amount of OpenRelik mediator pods to run.
    ##
    replicas: 1

  server:
    ## @param openrelik.server.hostname Sets the OpenRelik server hostname to use.
    ##
    hostname: <REPLACE_WITH_API_SERVER_HOSTNAME>
    ## @param openrelik.server.image Sets the OpenRelik server container image to use.
    ##
    image: "ghcr.io/openrelik/openrelik-server:2024.12.12"
    ## @param openrelik.server.port Sets the OpenRelik server port to use.
    ##
    port: 8710
    ## @param openrelik.server.replicas Sets the amount of OpenRelik server pods to run.
    ##
    replicas: 1
    ## @param openrelik.server.url Sets the OpenRelik server URL to use.
    ##
    url: <REPLACE_WITH_API_SERVER_URL>

  ui:
    ## @param openrelik.ui.hostname Sets the OpenRelik UI hostname to use.
    ##
    hostname: <REPLACE_WITH_UI_SERVER_HOSTNAME>
    ## @param openrelik.ui.image Sets the OpenRelik UI container image to use.
    ##
    image: "ghcr.io/openrelik/openrelik-ui:2024.12.12"
    ## @param openrelik.ui.port Sets the OpenRelik UI port to use.
    ##
    port: 8711
    ## @param openrelik.ui.replicas Sets the amount of OpenRelik UI pods to run.
    ##
    replicas: 1

  worker:
    analyzer:
      ## @param openrelik.worker.analyzer.image Sets the analyzer-config container image to use.
      ##
      image: "ghcr.io/openrelik/openrelik-worker-analyzer-config:2024.11.27"
      ## @param openrelik.worker.analyzer.replicas Sets the amount of analyzer-config pods to run.
      ##
      replicas: 1
    extraction:
      ## @param openrelik.worker.extraction.image Sets the extraction container image to use.
      ##
      image: "ghcr.io/openrelik/openrelik-worker-extraction:2024.11.27"
      ## @param openrelik.worker.extraction.replicas Sets the amount of extraction pods to run.
      ##
      replicas: 1
    hayabusa:
      ## @param openrelik.worker.hayabusa.image Sets the hayabusa container image to use.
      ##
      image: "ghcr.io/openrelik/openrelik-worker-hayabusa:2024.11.27"
      ## @param openrelik.worker.hayabusa.replicas Sets the amount of hayabusa pods to run.
      ##
      replicas: 1
    plaso:
      ## @param openrelik.worker.plaso.image Sets the plaso container image to use.
      ##
      image: "ghcr.io/openrelik/openrelik-worker-plaso:2024.11.27"
      ## @param openrelik.worker.plaso.replicas Sets the amount of plaso pods to run.
      ##
      replicas: 1
    strings:
      ## @param openrelik.worker.strings.image Sets the strings container image to use.
      ##
      image: "ghcr.io/openrelik/openrelik-worker-strings:2024.11.27"
      ## @param openrelik.worker.strings.replicas Sets the amount of strings pods to run.
      ##
      replicas: 1

## @section Postgres parameters
##
postgres:
  ## @param postgres.managedSecret Enables a managed secret for the Postgres DB password.
  ##
  managedSecret: true
  ## @param postgres.managedSecretVersion Sets the version of the managed secret for the Postgres DB password.
  ##
  managedSecretVersion: 1
  ## @param postgres.user Sets the Postgres DB user name.
  ##
  user: "openrelik"
  ## @param postgres.selfManaged Enables a Postgres DB containter to be deployed into the cluster.
  ##
  selfManaged: false

## @section Redis parameters
##
redis:
  ## @param redis.url Sets the Redis URL.
  ##
  url: <REPLACE_WITH_REDIS_URL>
  ## @param redis.selfManaged Enables a Redis containter to be deployed into the cluster.
  ##
  selfManaged: false

## @section Filestore parameters
##
filestore:
  ## @param filestore.managed Enables a Google Cloud Filestore instance to be deployed.
  ##
  managed: true

## @section Gateway API parameters
##
gateway:
  ## @param gateway.certificateName Sets the name of the OpenRelik certificate.
  ##
  certificateName: <REPLACE_WITH_CERTIFICATE_NAME>
  ## @param gateway.managed Enables a Gateway API Global Loadbalancer to be deployed.
  ##
  managed: true
